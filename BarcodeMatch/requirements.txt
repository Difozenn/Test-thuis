# Updated Requirements Files for BarcodeMatch

## requirements.txt (64-bit)
```txt
# Core dependencies
numpy>=1.21.0,<2.0
pandas>=1.3.0,<3.0
openpyxl>=3.0.0
pyodbc>=4.0.0
keyboard>=0.13.5
pyserial>=3.5
Pillow>=9.0.0
requests>=2.28.0

# Optional for development
# pyinstaller>=5.0
# pyinstaller-hooks-contrib>=2023.0
```

## requirements_32bit.txt (32-bit - MUST use these exact versions)
```txt
# Core dependencies - specific versions for 32-bit compatibility
numpy==1.21.6
pandas==1.3.5
openpyxl==3.0.10
pyodbc==4.0.35
keyboard==0.13.5
pyserial==3.5
Pillow==9.5.0
requests==2.28.2

# Optional for development
# pyinstaller==5.13.2
# pyinstaller-hooks-contrib==2023.10
```

## requirements_dev.txt (For development/building)
```txt
# Include all from requirements.txt
numpy>=1.21.0,<2.0
pandas>=1.3.0,<3.0
openpyxl>=3.0.0
pyodbc>=4.0.0
keyboard>=0.13.5
pyserial>=3.5
Pillow>=9.0.0
requests>=2.28.0

# Build tools
pyinstaller>=5.0
pyinstaller-hooks-contrib>=2023.0
```

## requirements_minimal.txt (Minimal runtime without build tools)
```txt
# Absolute minimum for running BarcodeMatch
numpy>=1.21.0,<2.0
pandas>=1.3.0,<3.0
openpyxl>=3.0.0
keyboard>=0.13.5
pyserial>=3.5
Pillow>=9.0.0
requests>=2.28.0
```

## Installation Commands:

### For 64-bit development:
```bash
pip install -r requirements_dev.txt
```

### For 32-bit build (MUST use 32-bit Python):
```bash
# Use exact versions for 32-bit
pip install -r requirements_32bit.txt

# Then install build tools
pip install pyinstaller==5.13.2 pyinstaller-hooks-contrib==2023.10
```

### For end users (no build tools):
```bash
pip install -r requirements_minimal.txt
```

## Important Notes:

1. **Numpy was missing** from the original requirements - this was causing the import error
2. **Version constraints** are important:
   - Numpy < 2.0 for better compatibility
   - Pandas < 3.0 to avoid breaking changes
   - 32-bit MUST use exact versions due to compatibility issues

3. **pyodbc is optional** - only needed if using GANNOMAT mode with .mdb files

4. **Order matters** - numpy must be installed before pandas

## Quick Install Script (install_requirements.py):
```python
#!/usr/bin/env python3
import sys
import subprocess
import platform

def install_requirements():
    is_32bit = sys.maxsize <= 2**32
    py_version = sys.version_info
    
    print(f"Python {py_version.major}.{py_version.minor} {'32-bit' if is_32bit else '64-bit'}")
    
    if is_32bit:
        req_file = "requirements_32bit.txt"
    else:
        req_file = "requirements.txt"
    
    print(f"Installing from {req_file}...")
    
    # Upgrade pip first
    subprocess.check_call([sys.executable, "-m", "pip", "install", "--upgrade", "pip"])
    
    # Install requirements
    subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", req_file])
    
    print("Installation complete!")

if __name__ == "__main__":
    install_requirements()
```

## Verification Script (verify_imports.py):
```python
#!/usr/bin/env python3
import sys

print("Verifying imports...")

try:
    import numpy
    print(f"✓ numpy {numpy.__version__}")
except ImportError as e:
    print(f"✗ numpy: {e}")

try:
    import pandas
    print(f"✓ pandas {pandas.__version__}")
except ImportError as e:
    print(f"✗ pandas: {e}")

try:
    import openpyxl
    print(f"✓ openpyxl {openpyxl.__version__}")
except ImportError as e:
    print(f"✗ openpyxl: {e}")

try:
    import keyboard
    print(f"✓ keyboard {keyboard.__version__ if hasattr(keyboard, '__version__') else 'OK'}")
except ImportError as e:
    print(f"✗ keyboard: {e}")

try:
    import serial
    print(f"✓ pyserial {serial.__version__}")
except ImportError as e:
    print(f"✗ pyserial: {e}")

try:
    import PIL
    print(f"✓ Pillow {PIL.__version__}")
except ImportError as e:
    print(f"✗ Pillow: {e}")

try:
    import requests
    print(f"✓ requests {requests.__version__}")
except ImportError as e:
    print(f"✗ requests: {e}")

try:
    import pyodbc
    print(f"✓ pyodbc {pyodbc.version}")
except ImportError:
    print("⚠ pyodbc not installed (optional - only needed for .mdb files)")

print("\nImport verification complete!")
```